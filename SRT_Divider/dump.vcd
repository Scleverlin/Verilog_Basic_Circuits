$date
	Wed Oct 25 16:56:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_norm $end
$scope module norm $end
$var wire 32 ! dividend [31:0] $end
$var wire 32 " divisor [31:0] $end
$var wire 1 # result_sign $end
$var wire 25 $ divisor_mantissa_normalized [24:0] $end
$var wire 25 % dividend_mantissa_normalized [24:0] $end
$var wire 8 & current_exponent [7:0] $end
$scope module exp $end
$var wire 32 ' dividend [31:0] $end
$var wire 32 ( divisor [31:0] $end
$var wire 8 ) result_exp [7:0] $end
$var wire 8 * exp_divisor [7:0] $end
$var wire 8 + exp_dividend [7:0] $end
$upscope $end
$scope module mfm $end
$var wire 32 , dividend [31:0] $end
$var wire 32 - divisor [31:0] $end
$var wire 1 # result_sign $end
$var wire 1 . divisor_sign $end
$var wire 25 / divisor_mantissa_normalized [24:0] $end
$var wire 23 0 divisor_mantissa [22:0] $end
$var wire 8 1 divisor_exponent [7:0] $end
$var wire 1 2 dividend_sign $end
$var wire 25 3 dividend_mantissa_normalized [24:0] $end
$var wire 23 4 dividend_mantissa [22:0] $end
$var wire 8 5 dividend_exponent [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 5
bx 4
b0xxxxxxxxxxxxxxxxxxxxxxxx 3
x2
bx 1
bx 0
b0xxxxxxxxxxxxxxxxxxxxxxxx /
x.
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
b0xxxxxxxxxxxxxxxxxxxxxxxx %
b0xxxxxxxxxxxxxxxxxxxxxxxx $
x#
bx "
bx !
$end
#5
b0 $
b0 /
0#
b0 %
b0 3
b1111111 &
b1111111 )
b0 *
0.
b0 0
b0 1
b0 +
02
b0 4
b0 5
b0 "
b0 (
b0 -
b0 !
b0 '
b0 ,
#10
1.
12
b10000000000000000000000000000000 "
b10000000000000000000000000000000 (
b10000000000000000000000000000000 -
b10000000000000000000000000000000 !
b10000000000000000000000000000000 '
b10000000000000000000000000000000 ,
#15
b100000000 $
b100000000 /
b100000000 %
b100000000 3
0.
b100000000 0
02
b100000000 4
b100000000 "
b100000000 (
b100000000 -
b100000000 !
b100000000 '
b100000000 ,
#115
