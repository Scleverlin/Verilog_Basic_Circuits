$date
	Mon Nov  6 15:41:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_add_sub $end
$scope module fp32 $end
$var wire 32 ! add1 [31:0] $end
$var wire 32 " add2 [31:0] $end
$var wire 8 # add_one_in_exponent [7:0] $end
$var wire 1 $ command $end
$var wire 1 % current_add $end
$var wire 1 & current_sub $end
$var wire 24 ' final_f_concat [23:0] $end
$var wire 8 ( shift_nums [7:0] $end
$var wire 8 ) shift_before_add [7:0] $end
$var wire 1 * result_sign $end
$var wire 1 + result_shift_or_not $end
$var wire 32 , result [31:0] $end
$var wire 24 - man_b [23:0] $end
$var wire 24 . man_a [23:0] $end
$var wire 32 / final_result_e1e2eqzero [31:0] $end
$var wire 32 0 final_result_concat [31:0] $end
$var wire 32 1 final_result_add_or_sub [31:0] $end
$var wire 24 2 final_man_e1_eq_e2_eq_zero [23:0] $end
$var wire 48 3 final_f_add_tmp [47:0] $end
$var wire 47 4 final_f_add [46:0] $end
$var wire 8 5 final_exponent_e1e2eqzero [7:0] $end
$var wire 8 6 final_exponent [7:0] $end
$var wire 48 7 fianl_f_shift [47:0] $end
$var wire 47 8 extent_b [46:0] $end
$var wire 47 9 extent_a_shift [46:0] $end
$var wire 47 : extent_a [46:0] $end
$var wire 8 ; exponent_b [7:0] $end
$var wire 8 < exponent_a [7:0] $end
$var wire 9 = e1_e2_tmp [8:0] $end
$var wire 8 > e1_e2_0 [7:0] $end
$var wire 8 ? e1_e2 [7:0] $end
$var wire 8 @ current_exponent_tmp [7:0] $end
$var wire 1 A cout $end
$var wire 1 B add_or_sub $end
$var wire 1 C add_or_not $end
$scope module adder $end
$var wire 47 D a [46:0] $end
$var wire 47 E b [46:0] $end
$var wire 47 F sum [46:0] $end
$var wire 1 A cout $end
$upscope $end
$scope module adder_24 $end
$var wire 24 G sum [23:0] $end
$var wire 24 H b [23:0] $end
$var wire 24 I a [23:0] $end
$upscope $end
$scope module m_n $end
$var wire 48 J data [47:0] $end
$var wire 8 K shift_tmp [7:0] $end
$var wire 8 L shift [7:0] $end
$var wire 48 M outdata [47:0] $end
$upscope $end
$scope module norm $end
$var wire 1 % add $end
$var wire 32 N add1 [31:0] $end
$var wire 32 O add2 [31:0] $end
$var wire 1 & sub $end
$var wire 1 * result_sign $end
$var wire 2 P mode [1:0] $end
$var wire 24 Q man_b_tmp [23:0] $end
$var wire 24 R man_b [23:0] $end
$var wire 24 S man_a_tmp [23:0] $end
$var wire 24 T man_a [23:0] $end
$var wire 8 U exponent_b [7:0] $end
$var wire 8 V exponent_a [7:0] $end
$var wire 1 B add_or_sub $end
$var wire 1 W abs_a_ht_b $end
$scope module pre_processing $end
$var wire 32 X a [31:0] $end
$var wire 1 % add $end
$var wire 32 Y b [31:0] $end
$var wire 1 & sub $end
$var wire 1 * result_sign $end
$var wire 2 Z mode [1:0] $end
$var wire 1 W abs_a_ht_b $end
$scope module mode_judge $end
$var wire 32 [ a [31:0] $end
$var wire 1 % add $end
$var wire 32 \ b [31:0] $end
$var wire 1 & sub $end
$var wire 2 ] mode [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ]
bx \
bx [
bx Z
bx Y
bx X
xW
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
b0xxxxx K
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx J
bx I
bx H
bx G
bx F
bx E
bx D
xC
xB
xA
bx @
bx ?
bx >
bx =
bx <
bx ;
b0xxxxxxxxxxxxxxxxxxxxxxxx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
bx )
bx (
bx '
x&
x%
x$
b1 #
bx "
bx !
$end
#10
b10000000 6
b0 (
b0 L
b100000000000000000000000000000000000000000000000 7
b100000000000000000000000000000000000000000000000 M
b11000 K
b1 )
1C
b100000000000000000000000 J
b100000000000000000000000 4
b100000000000000000000000 F
1A
b1000000000000000000000000 9
b1000000000000000000000000 D
b1 ?
b1000000000000000000000000000000 ,
b1 =
b10000000 >
b100000000000000000000000 3
b1000000000000000000000000000000 1
0*
0B
b10000000 5
b11111111111111111111111100000000000000000000000 8
b11111111111111111111111100000000000000000000000 E
b1000000000000000000000000000000 /
1+
b0 2
b0 G
b100000000000000000000000 -
b100000000000000000000000 H
b100000000000000000000000 R
b100000000000000000000000 :
b100000000000000000000000 '
b100000000000000000000000 .
b100000000000000000000000 I
b100000000000000000000000 T
b10000000 @
b100000000000000000000000 Q
b100000000000000000000000 S
b10000000 ;
b10000000 U
b1000000100000000000000000000000 0
b10000001 <
b10000001 V
b1 P
b1 Z
b1 ]
1W
1&
0%
0$
b1000000000000000000000000000000 "
b1000000000000000000000000000000 O
b1000000000000000000000000000000 Y
b1000000000000000000000000000000 \
b1000000100000000000000000000000 !
b1000000100000000000000000000000 N
b1000000100000000000000000000000 X
b1000000100000000000000000000000 [
#20
b1000000110000000000000000000000 ,
b1000000110000000000000000000000 1
b10000001 6
b1 (
b1 L
b110000000000000000000000000000000000000000000000 7
b110000000000000000000000000000000000000000000000 M
b10111 K
b1100000000000000000000000 J
b1100000000000000000000000 4
b1100000000000000000000000 F
0A
b1100000000000000000000000 3
b100000000000000000000000 8
b100000000000000000000000 E
1B
b0 P
b0 Z
b0 ]
0&
1%
1$
#30
b1100 (
b1100 L
b1100 K
b1001000000000000101001011000101 ,
1C
b100000000101001011000101100010111010 3
b100000001001100010111010 8
b100000001001100010111010 E
b1000010000000001110001101110110 /
b10000100 5
b1100 )
b100000000101001011000101100010111010000000000000 7
b100000000101001011000101100010111010000000000000 M
b100000000101001011000101100010111010 J
b100000000101001011000101100010111010 4
b100000000101001011000101100010111010 F
b100000001001100010111010 -
b100000001001100010111010 H
b100000001001100010111010 R
b1110001101110110 2
b1110001101110110 G
b100000000100101010111100 :
b100000000100101010111100 '
b100000000100101010111100 .
b100000000100101010111100 I
b100000000100101010111100 T
b1001000000000000101001011000101 1
b10010000 6
b10000100 @
b100000000100101010111100000000000000 9
b100000000100101010111100000000000000 D
b1100 ?
b100000001001100010111010 Q
b100000000100101010111100 S
b10000100 ;
b10000100 U
b1001000000000000100101010111100 0
b10001111 >
b1100 =
b10010000 <
b10010000 V
0W
b1001000000000000100101010111100 "
b1001000000000000100101010111100 O
b1001000000000000100101010111100 Y
b1001000000000000100101010111100 \
b1000010000000001001100010111010 !
b1000010000000001001100010111010 N
b1000010000000001001100010111010 X
b1000010000000001001100010111010 [
#40
b1011 (
b1011 L
b1101 K
b10000000011000100000111100010111010 3
b1001000000000000110001000001111 ,
b1011 )
b100000000110001000001111000101110100000000000000 7
b100000000110001000001111000101110100000000000000 M
b10000000011000100000111100010111010 J
b10000000011000100000111100010111010 4
b10000000011000100000111100010111010 F
b101110101001100010111010 8
b101110101001100010111010 E
b1000010101110101110001101110110 /
b10000101 5
b10000000010010101011110000000000000 9
b10000000010010101011110000000000000 D
b1011 ?
b1110101110001101110110 2
b1110101110001101110110 G
b101110101001100010111010 -
b101110101001100010111010 H
b101110101001100010111010 R
b1001000000000000110001000001111 1
b10010000 6
b10000101 @
b1011 =
b101110101001100010111010 Q
b10000101 ;
b10000101 U
b1000010101110101001100010111010 !
b1000010101110101001100010111010 N
b1000010101110101001100010111010 X
b1000010101110101001100010111010 [
#50
b1011 (
b1011 L
b1101 K
b1001000000000000110001000001111 ,
1C
b10000000011000100000111100010111010 3
b101110101001100010111010 8
b101110101001100010111010 E
b1000010101110101110001101110110 /
b10000101 5
b1011 )
b100000000110001000001111000101110100000000000000 7
b100000000110001000001111000101110100000000000000 M
b10000000011000100000111100010111010 J
b10000000011000100000111100010111010 4
b10000000011000100000111100010111010 F
b101110101001100010111010 -
b101110101001100010111010 H
b101110101001100010111010 R
b1110101110001101110110 2
b1110101110001101110110 G
b100000000100101010111100 :
b100000000100101010111100 '
b100000000100101010111100 .
b100000000100101010111100 I
b100000000100101010111100 T
b1001000000000000110001000001111 1
b10010000 6
b10000101 @
b10000000010010101011110000000000000 9
b10000000010010101011110000000000000 D
b1011 ?
b101110101001100010111010 Q
b100000000100101010111100 S
b10000101 ;
b10000101 U
b1001000000000000100101010111100 0
b10001111 >
b1011 =
b10010000 <
b10010000 V
1W
1&
0%
0$
b1001000000000000100101010111100 !
b1001000000000000100101010111100 N
b1001000000000000100101010111100 X
b1001000000000000100101010111100 [
b11000010101110101001100010111010 "
b11000010101110101001100010111010 O
b11000010101110101001100010111010 Y
b11000010101110101001100010111010 \
#2050
