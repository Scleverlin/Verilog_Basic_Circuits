$date
	Wed Nov 22 16:49:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FPU_32_testbench $end
$scope module uut $end
$var wire 32 ! a [31:0] $end
$var wire 32 " b [31:0] $end
$var wire 1 # clk $end
$var wire 3 $ mode [2:0] $end
$var wire 1 % rst $end
$var wire 1 & sub $end
$var wire 32 ' result_mul [31:0] $end
$var wire 32 ( result_div [31:0] $end
$var wire 32 ) result_add [31:0] $end
$var wire 32 * result [31:0] $end
$var wire 1 + mul $end
$var wire 1 , gated_clk_mul $end
$var wire 1 - gated_clk_div $end
$var wire 1 . gated_clk_add_or_sub $end
$var wire 6 / flag [5:0] $end
$var wire 1 0 div $end
$var wire 1 1 add $end
$var reg 3 2 mode_reg [2:0] $end
$scope module SRT_divider_FP32 $end
$var wire 32 3 dividend [31:0] $end
$var wire 32 4 divisor [31:0] $end
$var wire 6 5 flag_w [5:0] $end
$var wire 1 % rst $end
$var wire 1 6 sticky $end
$var wire 1 7 round $end
$var wire 1 8 result_sign $end
$var wire 24 9 result_before_ieee [23:0] $end
$var wire 5 : r_idx [4:0] $end
$var wire 32 ; quotient [31:0] $end
$var wire 24 < q_rounding [23:0] $end
$var wire 26 = next_remainder [25:0] $end
$var wire 3 > mid_quotient [2:0] $end
$var wire 26 ? input_remainder [25:0] $end
$var wire 1 @ guard $end
$var wire 6 A flag_1 [5:0] $end
$var wire 5 B final_shift [4:0] $end
$var wire 1 C exp_add $end
$var wire 5 D divisor_shift [4:0] $end
$var wire 24 E divisor_mantissa_normalized [23:0] $end
$var wire 5 F dividend_shift [4:0] $end
$var wire 24 G dividend_mantissa_normalized [23:0] $end
$var wire 5 H d_idx [4:0] $end
$var wire 26 I current_q_d [25:0] $end
$var wire 8 J current_exponent [7:0] $end
$var wire 26 K current_divisor [25:0] $end
$var wire 26 L current_dividend [25:0] $end
$var wire 5 M compl_divisor_shift [4:0] $end
$var wire 5 N compl_dividend_shift [4:0] $end
$var wire 1 - clk $end
$var wire 30 O Q_pos_next [29:0] $end
$var wire 30 P Q_neg_next [29:0] $end
$var reg 30 Q Q_neg [29:0] $end
$var reg 30 R Q_pos [29:0] $end
$var reg 26 S current_remainder [25:0] $end
$var reg 6 T flag [5:0] $end
$var reg 1 U right_shift $end
$scope module dut $end
$var wire 24 V result [23:0] $end
$var wire 1 U right_shift $end
$var wire 5 W shift_nums [4:0] $end
$var wire 1 8 resultsign $end
$var wire 24 X result_temp [23:0] $end
$var wire 24 Y result_shifted [23:0] $end
$var wire 32 Z quotient [31:0] $end
$var wire 8 [ exponent_final [7:0] $end
$var wire 5 \ exponent_addend [4:0] $end
$var wire 1 C exp_add $end
$var wire 8 ] current_exponent [7:0] $end
$var wire 8 ^ addend_copmplement [7:0] $end
$scope module mngen $end
$var wire 24 _ data [23:0] $end
$var wire 5 ` shift [4:0] $end
$var wire 24 a outdata [23:0] $end
$upscope $end
$upscope $end
$scope module next_remainder_gen1 $end
$var wire 26 b current_remainder [25:0] $end
$var wire 26 c next_remainder_p [25:0] $end
$var wire 26 d next_remainder_n [25:0] $end
$var wire 26 e next_remainder_before_shift [25:0] $end
$var wire 26 f next_remainder [25:0] $end
$var wire 3 g mid_quotient [2:0] $end
$var wire 26 h current_q_d [25:0] $end
$var wire 1 i cout2 $end
$var wire 1 j cout $end
$scope module adder_neg $end
$var wire 26 k a [25:0] $end
$var wire 26 l b [25:0] $end
$var wire 1 m cin $end
$var wire 26 n sum [25:0] $end
$var wire 1 i cout $end
$upscope $end
$scope module adder_pos $end
$var wire 26 o a [25:0] $end
$var wire 1 p cin $end
$var wire 26 q sum [25:0] $end
$var wire 1 j cout $end
$var wire 26 r b [25:0] $end
$upscope $end
$upscope $end
$scope module norm $end
$var wire 32 s dividend [31:0] $end
$var wire 32 t divisor [31:0] $end
$var wire 1 8 result_sign $end
$var wire 5 u divisor_shift [4:0] $end
$var wire 24 v divisor_mantissa_normalized [23:0] $end
$var wire 5 w dividend_shift [4:0] $end
$var wire 24 x dividend_mantissa_normalized [23:0] $end
$var wire 8 y current_exponent [7:0] $end
$scope module exp $end
$var wire 32 z dividend [31:0] $end
$var wire 32 { divisor [31:0] $end
$var wire 9 | extra_bias [8:0] $end
$var wire 9 } result_tmp2 [8:0] $end
$var wire 9 ~ result_tmp [8:0] $end
$var wire 8 !" result_exp [7:0] $end
$var wire 8 "" exp_divisor [7:0] $end
$var wire 8 #" exp_dividend [7:0] $end
$var wire 9 $" divisor_sign [8:0] $end
$var wire 9 %" divisor_comple [8:0] $end
$var wire 9 &" dividend_sign [8:0] $end
$var wire 1 '" cout2 $end
$var wire 1 (" cout $end
$var wire 9 )" bias [8:0] $end
$scope module adder $end
$var wire 9 *" a [8:0] $end
$var wire 9 +" b [8:0] $end
$var wire 9 ," sum [8:0] $end
$var wire 1 (" cout $end
$upscope $end
$scope module adder2 $end
$var wire 9 -" a [8:0] $end
$var wire 9 ." b [8:0] $end
$var wire 9 /" sum [8:0] $end
$var wire 1 '" cout $end
$upscope $end
$upscope $end
$scope module mfm $end
$var wire 32 0" dividend [31:0] $end
$var wire 32 1" divisor [31:0] $end
$var wire 1 8 result_sign $end
$var wire 24 2" divisor_tmp [23:0] $end
$var wire 1 3" divisor_sign $end
$var wire 5 4" divisor_shift [4:0] $end
$var wire 24 5" divisor_mantissa_normalized [23:0] $end
$var wire 23 6" divisor_mantissa [22:0] $end
$var wire 8 7" divisor_exponent [7:0] $end
$var wire 24 8" dividend_tmp [23:0] $end
$var wire 1 9" dividend_sign $end
$var wire 5 :" dividend_shift [4:0] $end
$var wire 24 ;" dividend_mantissa_normalized [23:0] $end
$var wire 23 <" dividend_mantissa [22:0] $end
$var wire 8 =" dividend_exponent [7:0] $end
$scope module mng $end
$var wire 24 >" data [23:0] $end
$var wire 5 ?" shift [4:0] $end
$var wire 24 @" outdata [23:0] $end
$upscope $end
$scope module mng2 $end
$var wire 24 A" data [23:0] $end
$var wire 5 B" shift [4:0] $end
$var wire 24 C" outdata [23:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module q_selelct_table $end
$var wire 5 D" d_idx [4:0] $end
$var wire 5 E" d_ori [4:0] $end
$var wire 1 F" neg $end
$var wire 5 G" r_idx [4:0] $end
$var wire 5 H" r_ori [4:0] $end
$var wire 1 I" r_ge_1101 $end
$var wire 1 J" r_ge_1100 $end
$var wire 1 K" r_ge_1011 $end
$var wire 1 L" r_ge_1010 $end
$var wire 1 M" r_ge_1001 $end
$var wire 1 N" r_ge_1000 $end
$var wire 1 O" r_ge_0111 $end
$var wire 1 P" r_ge_0110 $end
$var wire 1 Q" r_ge_0101 $end
$var wire 1 R" r_ge_0100 $end
$var wire 1 S" r_ge_0011 $end
$var wire 1 T" r_ge_0010 $end
$var wire 3 U" quotient_temp [2:0] $end
$var wire 3 V" quotient [2:0] $end
$var wire 2 W" q [1:0] $end
$var wire 1 X" ops_sign $end
$var reg 1 Y" q0 $end
$var reg 1 Z" q2 $end
$upscope $end
$scope module qd_gen1 $end
$var wire 26 [" current_divisor [25:0] $end
$var wire 3 \" mid_quotient [2:0] $end
$var wire 26 ]" current_q_d [25:0] $end
$upscope $end
$scope module rounding_grs_1 $end
$var wire 1 C exp_add $end
$var wire 1 @ guard $end
$var wire 1 ^" halfway $end
$var wire 1 _" increment $end
$var wire 24 `" man [23:0] $end
$var wire 1 7 round $end
$var wire 1 6 sticky $end
$var wire 24 a" rounded_man [23:0] $end
$var wire 24 b" new_man [23:0] $end
$var wire 1 c" lsb $end
$upscope $end
$upscope $end
$scope module add_sub $end
$var wire 32 d" add1 [31:0] $end
$var wire 32 e" add2 [31:0] $end
$var wire 8 f" add_one_in_exponent [7:0] $end
$var wire 1 g" current_add $end
$var wire 1 h" current_sub $end
$var wire 51 i" final_f_shift [50:0] $end
$var wire 1 j" sticky_not_add $end
$var wire 1 k" sticky_add $end
$var wire 1 l" sticky $end
$var wire 8 m" shift_nums2 [7:0] $end
$var wire 8 n" shift_nums1 [7:0] $end
$var wire 8 o" shift_nums [7:0] $end
$var wire 8 p" shift_before_add [7:0] $end
$var wire 24 q" rounding_man [23:0] $end
$var wire 1 r" round $end
$var wire 32 s" result_wire [31:0] $end
$var wire 1 t" result_sign $end
$var wire 1 u" result_shift_or_not $end
$var wire 8 v" max_shift [7:0] $end
$var wire 24 w" man_b [23:0] $end
$var wire 24 x" man_a [23:0] $end
$var wire 1 y" guard $end
$var wire 1 z" first_zero $end
$var wire 51 {" final_f_shift_tmp_2 [50:0] $end
$var wire 51 |" final_f_shift_tmp [50:0] $end
$var wire 24 }" final_f_rounded [23:0] $end
$var wire 51 ~" final_f_add_tmp [50:0] $end
$var wire 50 !# final_f_add [49:0] $end
$var wire 8 "# final_exponent [7:0] $end
$var wire 50 ## extent_b [49:0] $end
$var wire 50 $# extent_a_shift [49:0] $end
$var wire 50 %# extent_a [49:0] $end
$var wire 8 &# exponent_b [7:0] $end
$var wire 8 '# exponent_a [7:0] $end
$var wire 1 (# exp_add $end
$var wire 9 )# e1_e2_tmp [8:0] $end
$var wire 8 *# e1_e2_0 [7:0] $end
$var wire 8 +# e1_e2 [7:0] $end
$var wire 8 ,# current_exponent_tmp [7:0] $end
$var wire 1 -# cout $end
$var wire 1 1 command $end
$var wire 1 . clk $end
$var wire 1 .# add_or_sub $end
$var wire 1 /# add_or_not $end
$var reg 32 0# result [31:0] $end
$scope module adder $end
$var wire 50 1# a [49:0] $end
$var wire 50 2# b [49:0] $end
$var wire 50 3# sum [49:0] $end
$var wire 1 -# cout $end
$upscope $end
$scope module m_n $end
$var wire 51 4# data [50:0] $end
$var wire 8 5# shift_tmp [7:0] $end
$var wire 8 6# shift [7:0] $end
$var wire 51 7# outdata [50:0] $end
$upscope $end
$scope module m_n_second_time $end
$var wire 51 8# data [50:0] $end
$var wire 8 9# max_shift [7:0] $end
$var wire 1 :# shift_tmp2 $end
$var wire 8 ;# shift_tmp [7:0] $end
$var wire 8 <# shift [7:0] $end
$var wire 51 =# outdata [50:0] $end
$upscope $end
$scope module norm $end
$var wire 1 g" add $end
$var wire 32 ># add1 [31:0] $end
$var wire 32 ?# add2 [31:0] $end
$var wire 1 h" sub $end
$var wire 1 t" result_sign $end
$var wire 2 @# mode [1:0] $end
$var wire 24 A# man_b_tmp [23:0] $end
$var wire 24 B# man_b [23:0] $end
$var wire 24 C# man_a_tmp [23:0] $end
$var wire 24 D# man_a [23:0] $end
$var wire 8 E# exponent_b [7:0] $end
$var wire 8 F# exponent_a [7:0] $end
$var wire 1 .# add_or_sub $end
$var wire 1 G# abs_a_ht_b $end
$scope module pre_processing $end
$var wire 32 H# a [31:0] $end
$var wire 1 g" add $end
$var wire 32 I# b [31:0] $end
$var wire 1 h" sub $end
$var wire 1 t" result_sign $end
$var wire 2 J# mode [1:0] $end
$var wire 1 G# abs_a_ht_b $end
$scope module mode_judge $end
$var wire 32 K# a [31:0] $end
$var wire 1 g" add $end
$var wire 32 L# b [31:0] $end
$var wire 1 h" sub $end
$var wire 2 M# mode [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module rounding_grs_add $end
$var wire 1 (# exp_add $end
$var wire 1 y" guard $end
$var wire 1 N# halfway $end
$var wire 1 O# increment $end
$var wire 24 P# man [23:0] $end
$var wire 1 r" round $end
$var wire 1 l" sticky $end
$var wire 24 Q# rounded_man [23:0] $end
$var wire 24 R# new_man [23:0] $end
$var wire 1 S# lsb $end
$upscope $end
$upscope $end
$scope module func_selector $end
$var wire 1 # clk $end
$var wire 1 . gated_clk_add_or_sub $end
$var wire 1 - gated_clk_div $end
$var wire 1 , gated_clk_mul $end
$var wire 3 T# mode [2:0] $end
$var wire 1 & sub $end
$var wire 1 + mul $end
$var wire 1 0 div $end
$var wire 1 1 add $end
$upscope $end
$scope module mul_instance $end
$var wire 1 , clk $end
$var wire 32 U# mul1 [31:0] $end
$var wire 32 V# mul2 [31:0] $end
$var wire 1 W# result_sign $end
$var wire 32 X# product_wire [31:0] $end
$var wire 5 Y# mul2_shift [4:0] $end
$var wire 24 Z# mul2_mantissa_normalized [23:0] $end
$var wire 5 [# mul1_shift [4:0] $end
$var wire 24 \# mul1_mantissa_normalized [23:0] $end
$var wire 8 ]# final_shift_comple [7:0] $end
$var wire 8 ^# final_shift [7:0] $end
$var wire 23 _# final_mantissa [22:0] $end
$var wire 8 `# final_exponent [7:0] $end
$var wire 24 a# f1f2_plus [23:0] $end
$var wire 8 b# exponent_add_comple [7:0] $end
$var wire 1 c# exponent_add $end
$var wire 1 d# exp_add_from_rounding $end
$var wire 8 e# current_exponent [7:0] $end
$var reg 32 f# product [31:0] $end
$scope module man_solving $end
$var wire 1 g# sticky $end
$var wire 1 h# round $end
$var wire 1 i# guard $end
$var wire 24 j# f2_plus [23:0] $end
$var wire 24 k# f1f2_plus_rounding [23:0] $end
$var wire 48 l# f1f2_plus [47:0] $end
$var wire 24 m# f1_plus [23:0] $end
$var wire 48 n# f1_f2_48 [47:0] $end
$var wire 1 c# exponent_add $end
$var wire 1 d# exp_add_from_rounding $end
$scope module mul_24 $end
$var wire 24 o# f2 [23:0] $end
$var wire 48 p# f1f2 [47:0] $end
$var wire 24 q# f1 [23:0] $end
$upscope $end
$scope module round_grs $end
$var wire 1 d# exp_add $end
$var wire 1 i# guard $end
$var wire 1 r# halfway $end
$var wire 1 s# increment $end
$var wire 24 t# man [23:0] $end
$var wire 1 h# round $end
$var wire 1 g# sticky $end
$var wire 24 u# rounded_man [23:0] $end
$var wire 24 v# new_man [23:0] $end
$var wire 1 w# lsb $end
$upscope $end
$upscope $end
$scope module norm $end
$var wire 32 x# mul1 [31:0] $end
$var wire 32 y# mul2 [31:0] $end
$var wire 1 W# result_sign $end
$var wire 5 z# mul2_shift [4:0] $end
$var wire 24 {# mul2_mantissa_normalized [23:0] $end
$var wire 5 |# mul1_shift [4:0] $end
$var wire 24 }# mul1_mantissa_normalized [23:0] $end
$var wire 8 ~# current_exponent [7:0] $end
$scope module exp $end
$var wire 32 !$ mul1 [31:0] $end
$var wire 32 "$ mul2 [31:0] $end
$var wire 9 #$ zero_detect [8:0] $end
$var wire 9 $$ result_tmp2 [8:0] $end
$var wire 9 %$ result_tmp [8:0] $end
$var wire 8 &$ result_exp [7:0] $end
$var wire 9 '$ mul2_sign [8:0] $end
$var wire 9 ($ mul1_sign [8:0] $end
$var wire 8 )$ exp_mul2 [7:0] $end
$var wire 8 *$ exp_mul1 [7:0] $end
$var wire 1 +$ cout2 $end
$var wire 1 ,$ cout $end
$var wire 9 -$ bias [8:0] $end
$scope module adder $end
$var wire 9 .$ a [8:0] $end
$var wire 9 /$ b [8:0] $end
$var wire 9 0$ sum [8:0] $end
$var wire 1 ,$ cout $end
$upscope $end
$scope module adder2 $end
$var wire 9 1$ a [8:0] $end
$var wire 9 2$ b [8:0] $end
$var wire 9 3$ sum [8:0] $end
$var wire 1 +$ cout $end
$upscope $end
$upscope $end
$scope module mfm $end
$var wire 32 4$ mul1 [31:0] $end
$var wire 32 5$ mul2 [31:0] $end
$var wire 1 W# result_sign $end
$var wire 24 6$ mul2_tmp [23:0] $end
$var wire 1 7$ mul2_sign $end
$var wire 5 8$ mul2_shift [4:0] $end
$var wire 24 9$ mul2_mantissa_normalized [23:0] $end
$var wire 23 :$ mul2_mantissa [22:0] $end
$var wire 8 ;$ mul2_exponent [7:0] $end
$var wire 24 <$ mul1_tmp [23:0] $end
$var wire 1 =$ mul1_sign $end
$var wire 5 >$ mul1_shift [4:0] $end
$var wire 24 ?$ mul1_mantissa_normalized [23:0] $end
$var wire 23 @$ mul1_mantissa [22:0] $end
$var wire 8 A$ mul1_exponent [7:0] $end
$scope module mng $end
$var wire 24 B$ data [23:0] $end
$var wire 5 C$ shift [4:0] $end
$var wire 24 D$ outdata [23:0] $end
$upscope $end
$scope module mng2 $end
$var wire 24 E$ data [23:0] $end
$var wire 5 F$ shift [4:0] $end
$var wire 24 G$ outdata [23:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module select $end
$var wire 6 H$ flag [5:0] $end
$var wire 3 I$ mode [2:0] $end
$var wire 32 J$ result_add [31:0] $end
$var wire 32 K$ result_div [31:0] $end
$var wire 32 L$ result_mul [31:0] $end
$var reg 32 M$ output_r [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 M$
bx L$
bx K$
bx J$
bx I$
b0 H$
bx G$
bx F$
bx E$
bx D$
bx C$
bx B$
bx A$
bx @$
bx ?$
bx >$
x=$
bx <$
bx ;$
bx :$
bx 9$
bx 8$
x7$
bx 6$
bx 5$
bx 4$
bx 3$
bx 2$
bx 1$
bx 0$
b0xxxxxxxx /$
b0xxxxxxxx .$
bx -$
x,$
x+$
bx *$
bx )$
b0xxxxxxxx ($
b0xxxxxxxx '$
bx &$
bx %$
bx $$
b0x #$
bx "$
bx !$
bx ~#
bx }#
bx |#
bx {#
bx z#
bx y#
bx x#
xw#
bx v#
bx u#
bx t#
xs#
xr#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
xi#
xh#
xg#
bx f#
bx e#
xd#
xc#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
xW#
bx V#
bx U#
bx T#
xS#
bx R#
bx Q#
bx P#
xO#
xN#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
xG#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
b0x <#
b0xxxxx ;#
x:#
bx 9#
bx 8#
bx 7#
bx 6#
b0xxxxx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
x/#
x.#
x-#
bx ,#
bx +#
bx *#
bx )#
x(#
bx '#
bx &#
b0xxxxxxxxxxxxxxxxxxxxxxxx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
xz"
xy"
bx x"
bx w"
bx v"
xu"
xt"
bx s"
xr"
bx q"
bx p"
bx o"
bx n"
b0x m"
xl"
xk"
xj"
bx i"
xh"
xg"
b1 f"
bx e"
bx d"
0c"
b1 b"
b0 a"
b0 `"
0_"
0^"
b0 ]"
b0 \"
b0xxxxxxxxxxxxxxxxxxxxxxxx ["
0Z"
1Y"
0X"
b0 W"
b0 V"
b0 U"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
b0xxx H"
b0xxx G"
0F"
b0xxxx E"
b0xxxx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
x9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
x3"
bx 2"
bx 1"
bx 0"
bx /"
b0xxxxxxxx ."
bx -"
bx ,"
bx +"
b0xxxxxxxx *"
b0xxxxxxxx )"
x("
x'"
b0xxxxxxxx &"
bx %"
b0xxxxxxxx $"
bx #"
bx ""
bx !"
bx ~
bx }
b1111110 |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
b0 r
bx q
0p
b0xxxxxxxxxxxxxxxxxxxxxxxx o
bx n
1m
b11111111111111111111111111 l
b0xxxxxxxxxxxxxxxxxxxxxxxx k
xj
xi
b0 h
b0 g
bx00 f
bx e
bx d
bx c
b0xxxxxxxxxxxxxxxxxxxxxxxx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
b0 V
xU
b0 T
b0 S
b0 R
b0 Q
b11 P
b0 O
bx N
bx M
b0xxxxxxxxxxxxxxxxxxxxxxxx L
b0xxxxxxxxxxxxxxxxxxxxxxxx K
bx J
b0 I
b0xxxx H
bx G
bx F
bx E
bx D
0C
bx B
b1 A
0@
b0xxxxxxxxxxxxxxxxxxxxxxxx ?
b0 >
bx00 =
b0 <
bx ;
b0xxx :
b0 9
x8
07
06
b0 5
bx 4
bx 3
bx 2
x1
x0
b0 /
0.
0-
0,
x+
b0 *
bx )
bx (
bx '
x&
0%
bx $
0#
bx "
bx !
$end
#10
xX"
bx H"
b1111 P
bx :
bx G"
bx00 ?
bx00 b
bx00 k
bx00 o
b10 A
b1 /
b1 5
b1 H$
b1 T
b11 Q
bx00 S
x,
x.
x-
1%
1#
#20
b10000011 "#
0(#
0N#
0l"
0S#
b111100000000000000000000 }"
b111100000000000000000000 Q#
0O#
0k"
b111100000000000000000001 R#
b111100000000000000000000 q"
b111100000000000000000000 P#
0y"
0r"
b111100000000000000000000000000000000000000000000000 i"
b111100000000000000000000000000000000000000000000000 {"
b111100000000000000000000000000000000000000000000000 =#
b1 o"
b0 m"
b0 <#
0:#
0z"
b0 ;#
b10000011 v"
b10000011 9#
b1 n"
b1 6#
b111100000000000000000000000000000000000000000000000 |"
b111100000000000000000000000000000000000000000000000 7#
b111100000000000000000000000000000000000000000000000 8#
b11010 5#
b1111000000000000000000000 ~"
b1111000000000000000000000 4#
b1xxxx111111111111111111111 l
b0xxxx P
b1 p"
1/#
b1111000000000000000000000 !#
b1111000000000000000000000 3#
0-#
b0xxxx000000000000000000000 I
b0xxxx000000000000000000000 h
b0xxxx000000000000000000000 r
b0xxxx000000000000000000000 ]"
b0xxxx O
b1111110 [
b0 ^
b1010000000000000000000000 $#
b1010000000000000000000000 1#
b1 +#
b0 Y
b0 a
b0 \
b0 `
b1 )#
b10000110 `#
b0 ]#
bx >
bx g
bx V"
bx \"
xF"
b10000010 *#
b0 ^#
b0 b#
b10010000000000000000000 _#
bx U"
bx W"
0r#
0d#
0w#
b110010000000000000000000 a#
b110010000000000000000000 k#
b110010000000000000000000 u#
xZ"
xY"
b0 X
b0 _
0g#
0s#
b110010000000000000000001 v#
b110010000000000000000000 t#
b1010 E"
b1010 H
b1010 D"
b0 B
b0 W
b0 M
0h#
0i#
b110010000000000000000000000000000000000000000000 l#
0c#
b0 N
b1111110 J
b1111110 ]
b1111110 y
b1111110 !"
b101000000000000000000000 K
b101000000000000000000000 ["
b101000000000000000000000 E
b101000000000000000000000 v
b101000000000000000000000 5"
b101000000000000000000000 C"
b0 D
b0 u
b0 4"
b0 B"
b11001000000000000000000000000000000000000000000 n#
b11001000000000000000000000000000000000000000000 p#
b101000000000000000000000 Z#
b101000000000000000000000 j#
b101000000000000000000000 o#
b101000000000000000000000 {#
b101000000000000000000000 9$
b101000000000000000000000 G$
b0 Y#
b0 z#
b0 8$
b0 F$
b101000000000000000000000 L
b101000000000000000000000 G
b101000000000000000000000 x
b101000000000000000000000 ;"
b101000000000000000000000 @"
b0 F
b0 w
b0 :"
b0 ?"
1j"
1u"
b10000110 e#
b10000110 ~#
b10000110 &$
b101000000000000000000000 \#
b101000000000000000000000 m#
b101000000000000000000000 q#
b101000000000000000000000 }#
b101000000000000000000000 ?$
b101000000000000000000000 D$
b0 [#
b0 |#
b0 >$
b0 C$
b101000000000000000000000 ##
b101000000000000000000000 2#
b1111110 }
b1111110 /"
1'"
0G#
b101000000000000000000000 w"
b101000000000000000000000 B#
b101000000000000000000000 %#
b101000000000000000000000 x"
b101000000000000000000000 D#
b10000010 ,#
b10000110 $$
b10000110 3$
1+$
1.#
b111111111 ~
b111111111 ,"
b111111111 -"
0("
b1111111 )"
b1111111 ."
b101000000000000000000000 A#
b101000000000000000000000 C#
b10000010 &#
b10000010 E#
b10000011 '#
b10000011 F#
b110000001 -$
b110000001 2$
b0 #$
b1000001111100000000000000000000 s"
0t"
b101111101 %"
b101111101 +"
b101000000000000000000000 2"
b101000000000000000000000 A"
b100000101 %$
b100000101 0$
b100000101 1$
0,$
b101000000000000000000000 6$
b101000000000000000000000 E$
b111111000000000000000000000000 (
b111111000000000000000000000000 ;
b111111000000000000000000000000 Z
b111111000000000000000000000000 K$
08
b101000000000000000000000 8"
b101000000000000000000000 >"
b1000011010010000000000000000000 X#
0W#
b101000000000000000000000 <$
b101000000000000000000000 B$
0h"
b0 @#
b0 J#
b0 M#
b10000011 $"
b10000011 ""
03"
b1000000000000000000000 6"
b10000011 7"
b10000011 '$
b10000011 /$
b10000011 )$
07$
b1000000000000000000000 :$
b10000011 ;$
b10000010 &"
b10000010 *"
b10000010 #"
09"
b1000000000000000000000 <"
b10000010 ="
b10000010 ($
b10000010 .$
b10000010 *$
0=$
b1000000000000000000000 @$
b10000010 A$
0+
1g"
11
0&
00
0,
0.
0-
b1000001101000000000000000000000 "
b1000001101000000000000000000000 4
b1000001101000000000000000000000 t
b1000001101000000000000000000000 {
b1000001101000000000000000000000 1"
b1000001101000000000000000000000 e"
b1000001101000000000000000000000 ?#
b1000001101000000000000000000000 I#
b1000001101000000000000000000000 L#
b1000001101000000000000000000000 V#
b1000001101000000000000000000000 y#
b1000001101000000000000000000000 "$
b1000001101000000000000000000000 5$
b1000001001000000000000000000000 !
b1000001001000000000000000000000 3
b1000001001000000000000000000000 s
b1000001001000000000000000000000 z
b1000001001000000000000000000000 0"
b1000001001000000000000000000000 d"
b1000001001000000000000000000000 >#
b1000001001000000000000000000000 H#
b1000001001000000000000000000000 K#
b1000001001000000000000000000000 U#
b1000001001000000000000000000000 x#
b1000001001000000000000000000000 !$
b1000001001000000000000000000000 4$
b1 $
b1 T#
0#
#30
b1000001111100000000000000000000 *
b1000001111100000000000000000000 M$
b1000001111100000000000000000000 )
b1000001111100000000000000000000 0#
b1000001111100000000000000000000 J$
b1 2
b1 I$
1.
1#
#40
b1 m"
b1 <#
1:#
1z"
b1 ;#
b11111111 o"
b0 n"
b0 6#
b11011 5#
1-#
b101000000000000000000000 }"
b101000000000000000000000 Q#
b111100000000000000000000 %#
b111100000000000000000000 x"
b111100000000000000000000 D#
b101000000000000000000001 R#
b101000000000000000000000 q"
b101000000000000000000000 P#
b111100000000000000000000 C#
b101100000000000000000 _#
b101000000000000000000000000000000000000000000000000 i"
b101000000000000000000000000000000000000000000000000 {"
b101000000000000000000000000000000000000000000000000 =#
b10100000000000000000000000000000000000000000000000 |"
b10100000000000000000000000000000000000000000000000 7#
b10100000000000000000000000000000000000000000000000 8#
b10100000000000000000000 ~"
b10100000000000000000000 4#
b0 p"
b10100000000000000000000 !#
b10100000000000000000000 3#
b100101100000000000000000 a#
b100101100000000000000000 k#
b100101100000000000000000 u#
0.#
b11111111111111111111111111011000000000000000000000 ##
b11111111111111111111111111011000000000000000000000 2#
b10000010 "#
b111100000000000000000000 $#
b111100000000000000000000 1#
b0 +#
b100101100000000000000001 v#
b100101100000000000000000 t#
b1 ]#
b1000001001000000000000000000000 s"
0t"
b111111100000000000000000000000 (
b111111100000000000000000000000 ;
b111111100000000000000000000000 Z
b111111100000000000000000000000 K$
b1111111 [
b1111111 J
b1111111 ]
b1111111 y
b1111111 !"
b101000000000000000000000 w"
b101000000000000000000000 B#
b10000011 v"
b10000011 9#
b10000011 ,#
b0 )#
1G#
b1000100000101100000000000000000 X#
b10001000 `#
b10000111 e#
b10000111 ~#
b10000111 &$
b100101100000000000000000000000000000000000000000 l#
b11111111 ^#
b11111111 b#
b1 @#
b1 J#
b1 M#
b1111111 }
b1111111 /"
0'"
b101000000000000000000000 A#
b10000011 &#
b10000011 E#
b10000111 $$
b10000111 3$
1c#
b0 ~
b0 ,"
b0 -"
1("
b111100000000000000000000 L
b111100000000000000000000 G
b111100000000000000000000 x
b111100000000000000000000 ;"
b111100000000000000000000 @"
b111100000000000000000000 8"
b111100000000000000000000 >"
b100000110 %$
b100000110 0$
b100000110 1$
b100101100000000000000000000000000000000000000000 n#
b100101100000000000000000000000000000000000000000 p#
b111100000000000000000000 \#
b111100000000000000000000 m#
b111100000000000000000000 q#
b111100000000000000000000 }#
b111100000000000000000000 ?$
b111100000000000000000000 D$
b111100000000000000000000 <$
b111100000000000000000000 B$
1h"
0.
b10000011 &"
b10000011 *"
b10000011 #"
b11100000000000000000000 <"
b10000011 ="
b10000011 ($
b10000011 .$
b10000011 *$
b11100000000000000000000 @$
b10000011 A$
0g"
01
1&
0#
b1000001111100000000000000000000 !
b1000001111100000000000000000000 3
b1000001111100000000000000000000 s
b1000001111100000000000000000000 z
b1000001111100000000000000000000 0"
b1000001111100000000000000000000 d"
b1000001111100000000000000000000 >#
b1000001111100000000000000000000 H#
b1000001111100000000000000000000 K#
b1000001111100000000000000000000 U#
b1000001111100000000000000000000 x#
b1000001111100000000000000000000 !$
b1000001111100000000000000000000 4$
b10 $
b10 T#
#50
b1000001001000000000000000000000 *
b1000001001000000000000000000000 M$
b1000001001000000000000000000000 )
b1000001001000000000000000000000 0#
b1000001001000000000000000000000 J$
b10 2
b10 I$
1.
1#
#60
1k"
b0 m"
b0 <#
0:#
0z"
1O#
b0 ;#
1y"
1r"
b11010 o"
b11010 n"
b11010 6#
b1 5#
b110000000000000000000001 }"
b110000000000000000000001 Q#
1t"
b11111111111111111111111111100000000000000000000000 ##
b11111111111111111111111111100000000000000000000000 2#
1l"
b110000000000000000000001 R#
b110000000000000000000000 q"
b110000000000000000000000 P#
b111111111111111111111111111000000000000000000000000 i"
b111111111111111111111111111000000000000000000000000 {"
b111111111111111111111111111000000000000000000000000 =#
b111111111111111111111111111000000000000000000000000 |"
b111111111111111111111111111000000000000000000000000 7#
b111111111111111111111111111000000000000000000000000 8#
b11111111111111111111111111100000000000000000000000 ~"
b11111111111111111111111111100000000000000000000000 4#
b10000000000000000000000 _#
b1xx11111111111111111111111 l
b11000000010000000000000000000001 s"
b10000000 "#
b11111111 p"
0/#
b11111111111111111111111111100000000000000000000000 !#
b11111111111111111111111111100000000000000000000000 3#
0-#
b110000000000000000000000 a#
b110000000000000000000000 k#
b110000000000000000000000 u#
b0 ]#
b0xx00000000000000000000000 I
b0xx00000000000000000000000 h
b0xx00000000000000000000000 r
b0xx00000000000000000000000 ]"
b111111000000000000000000000000 (
b111111000000000000000000000000 ;
b111111000000000000000000000000 Z
b111111000000000000000000000000 K$
b1111110 [
b1111110 J
b1111110 ]
b1111110 y
b1111110 !"
b100000000000000000000000 w"
b100000000000000000000000 B#
b110000000000000000000000 %#
b110000000000000000000000 x"
b110000000000000000000000 D#
b10011011 v"
b10011011 9#
b10000001 ,#
b0 $#
b0 1#
b11111111 +#
0G#
b1000001010000000000000000000000 X#
b10000010 `#
b10000010 e#
b10000010 ~#
b10000010 &$
b110000000000000000000001 v#
b110000000000000000000000 t#
b0 ^#
b0 b#
b1000 E"
b1000 H
b1000 D"
b1111110 }
b1111110 /"
1'"
b100000000000000000000000 A#
b110000000000000000000000 C#
b10000001 &#
b10000001 E#
b1111111 *#
b111111111 )#
b10000000 '#
b10000000 F#
b10000010 $$
b10000010 3$
b110000000000000000000000000000000000000000000000 l#
0c#
b101111111 %"
b101111111 +"
b100000000000000000000000 K
b100000000000000000000000 ["
b100000000000000000000000 E
b100000000000000000000000 v
b100000000000000000000000 5"
b100000000000000000000000 C"
b100000000000000000000000 2"
b100000000000000000000000 A"
b100000000000000000000000 Z#
b100000000000000000000000 j#
b100000000000000000000000 o#
b100000000000000000000000 {#
b100000000000000000000000 9$
b100000000000000000000000 G$
b100000000000000000000000 6$
b100000000000000000000000 E$
b111111111 ~
b111111111 ,"
b111111111 -"
0("
b110000000000000000000000 L
b110000000000000000000000 G
b110000000000000000000000 x
b110000000000000000000000 ;"
b110000000000000000000000 @"
b110000000000000000000000 8"
b110000000000000000000000 >"
b100000001 %$
b100000001 0$
b100000001 1$
b11000000000000000000000000000000000000000000000 n#
b11000000000000000000000000000000000000000000000 p#
b110000000000000000000000 \#
b110000000000000000000000 m#
b110000000000000000000000 q#
b110000000000000000000000 }#
b110000000000000000000000 ?$
b110000000000000000000000 D$
b110000000000000000000000 <$
b110000000000000000000000 B$
0.
b10000001 $"
b10000001 ""
b0 6"
b10000001 7"
b10000001 '$
b10000001 /$
b10000001 )$
b0 :$
b10000001 ;$
b10000000 &"
b10000000 *"
b10000000 #"
b10000000000000000000000 <"
b10000000 ="
b10000000 ($
b10000000 .$
b10000000 *$
b10000000000000000000000 @$
b10000000 A$
1+
0&
0#
b1000000100000000000000000000000 "
b1000000100000000000000000000000 4
b1000000100000000000000000000000 t
b1000000100000000000000000000000 {
b1000000100000000000000000000000 1"
b1000000100000000000000000000000 e"
b1000000100000000000000000000000 ?#
b1000000100000000000000000000000 I#
b1000000100000000000000000000000 L#
b1000000100000000000000000000000 V#
b1000000100000000000000000000000 y#
b1000000100000000000000000000000 "$
b1000000100000000000000000000000 5$
b1000000010000000000000000000000 !
b1000000010000000000000000000000 3
b1000000010000000000000000000000 s
b1000000010000000000000000000000 z
b1000000010000000000000000000000 0"
b1000000010000000000000000000000 d"
b1000000010000000000000000000000 >#
b1000000010000000000000000000000 H#
b1000000010000000000000000000000 K#
b1000000010000000000000000000000 U#
b1000000010000000000000000000000 x#
b1000000010000000000000000000000 !$
b1000000010000000000000000000000 4$
b0 $
b0 T#
#70
b1000001010000000000000000000000 *
b1000001010000000000000000000000 M$
b1000001010000000000000000000000 '
b1000001010000000000000000000000 f#
b1000001010000000000000000000000 L$
b0 2
b0 I$
1,
1#
#80
0N#
0(#
0l"
b10 n"
b10 6#
b10 o"
b0 m"
b0 <#
0:#
0k"
b11001 5#
0z"
b0 ;#
0O#
0y"
0r"
b1000000000000000000000 _#
0S#
b100000000000000000000000 }"
b100000000000000000000000 Q#
b100000000000000000000000000000000000000000000000000 i"
b100000000000000000000000000000000000000000000000000 {"
b100000000000000000000000000000000000000000000000000 =#
b100000000000000000000000000000000000000000000000000 |"
b100000000000000000000000000000000000000000000000000 7#
b100000000000000000000000000000000000000000000000000 8#
b10000000000000000000000000 ~"
b10000000000000000000000000 4#
b101000000000000000000000 a#
b101000000000000000000000 k#
b101000000000000000000000 u#
b100000000000000000000001 R#
b100000000000000000000000 q"
b100000000000000000000000 P#
b10 p"
1/#
b10000000000000000000000000 !#
b10000000000000000000000000 3#
1-#
0t"
b101000000000000000000001 v#
b101000000000000000000000 t#
b1000000100000000000000000000000 (
b1000000100000000000000000000000 ;
b1000000100000000000000000000000 Z
b1000000100000000000000000000000 K$
b10000001 [
b10000001 J
b10000001 ]
b10000001 y
b10000001 !"
b101000000000000000000000 %#
b101000000000000000000000 x"
b101000000000000000000000 D#
b10000100 v"
b10000100 9#
b10000010 ,#
b1000010000000000000000000000000 s"
b10000100 "#
b10100000000000000000000000 $#
b10100000000000000000000000 1#
b10 +#
b1000011101000000000000000000000 X#
b10000111 `#
b10000111 e#
b10000111 ~#
b10000111 &$
b101000000000000000000000000000000000000000000000 l#
b10000001 }
b10000001 /"
0'"
b101000000000000000000000 C#
b10000010 &#
b10000010 E#
b10000011 *#
b10 )#
b10000100 '#
b10000100 F#
b10000111 $$
b10000111 3$
b101111110 %"
b101111110 +"
b10 ~
b10 ,"
b10 -"
1("
b101000000000000000000000 L
b101000000000000000000000 G
b101000000000000000000000 x
b101000000000000000000000 ;"
b101000000000000000000000 @"
b101000000000000000000000 8"
b101000000000000000000000 >"
1G#
b100000110 %$
b100000110 0$
b100000110 1$
b10100000000000000000000000000000000000000000000 n#
b10100000000000000000000000000000000000000000000 p#
b101000000000000000000000 \#
b101000000000000000000000 m#
b101000000000000000000000 q#
b101000000000000000000000 }#
b101000000000000000000000 ?$
b101000000000000000000000 D$
b101000000000000000000000 <$
b101000000000000000000000 B$
0,
b10000010 $"
b10000010 ""
b10000010 7"
b10000010 '$
b10000010 /$
b10000010 )$
b10000010 ;$
b10000100 &"
b10000100 *"
b10000100 #"
b1000000000000000000000 <"
b10000100 ="
b10000100 ($
b10000100 .$
b10000100 *$
b1000000000000000000000 @$
b10000100 A$
0+
10
0#
b1000001000000000000000000000000 "
b1000001000000000000000000000000 4
b1000001000000000000000000000000 t
b1000001000000000000000000000000 {
b1000001000000000000000000000000 1"
b1000001000000000000000000000000 e"
b1000001000000000000000000000000 ?#
b1000001000000000000000000000000 I#
b1000001000000000000000000000000 L#
b1000001000000000000000000000000 V#
b1000001000000000000000000000000 y#
b1000001000000000000000000000000 "$
b1000001000000000000000000000000 5$
b1000010001000000000000000000000 !
b1000010001000000000000000000000 3
b1000010001000000000000000000000 s
b1000010001000000000000000000000 z
b1000010001000000000000000000000 0"
b1000010001000000000000000000000 d"
b1000010001000000000000000000000 >#
b1000010001000000000000000000000 H#
b1000010001000000000000000000000 K#
b1000010001000000000000000000000 U#
b1000010001000000000000000000000 x#
b1000010001000000000000000000000 !$
b1000010001000000000000000000000 4$
b11 $
b11 T#
#90
b0xxxxxx O
b0xxxxxx P
x6
x7
b0 *
b0 M$
b11 A
b10 /
b10 5
b10 H$
b10 T
b0xxxx Q
b0xxxx R
b11 2
b11 I$
1-
1#
#100
0-
0#
#110
b100000000000000000000000 =
b100000000000000000000000 f
b1001000000000000000000000 e
b1000000000000000000000 d
b1000000000000000000000 n
1i
b1001000000000000000000000 c
b1001000000000000000000000 q
0j
b11011111111111111111111111 l
b100000000000000000000000 I
b100000000000000000000000 h
b100000000000000000000000 r
b100000000000000000000000 ]"
b1 W"
0Z"
0Y"
b1 >
b1 g
b1 V"
b1 \"
1T"
1S"
1R"
1Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
06
b1 U"
0F"
b101 H"
b1 O
b0 P
0X"
07
b101 :
b101 G"
b101000000000000000000000 ?
b101000000000000000000000 b
b101000000000000000000000 k
b101000000000000000000000 o
b111 2
b111 I$
b0 Q
b0 R
b0 S
b1 A
b0 /
b0 5
b0 H$
b0 T
1-
1#
0%
#120
0-
0#
1%
#130
0Q"
b0 =
b0 f
b1000000000000000000000000 e
b100 H"
b0 d
b0 n
b1000000000000000000000000 c
b1000000000000000000000000 q
b101 O
b100 P
16
b100 :
b100 G"
b100000000000000000000000 ?
b100000000000000000000000 b
b100000000000000000000000 k
b100000000000000000000000 o
b10 A
b1 /
b1 5
b1 H$
b1 T
b1 R
b100000000000000000000000 S
b11 2
b11 I$
1-
1#
#140
0-
0#
#150
b11111111111111111111111111 l
b0 I
b0 h
b0 r
b0 ]"
b0 >
b0 g
b0 V"
b0 \"
b0 U"
b0 W"
1Y"
0T"
0S"
0R"
b0 H"
b0 =
b0 f
b0 e
b10100 O
b10011 P
b0 :
b0 G"
b0 d
b0 n
1i
b0 c
b0 q
b0 ?
b0 b
b0 k
b0 o
b11 A
b10 /
b10 5
b10 H$
b10 T
b100 Q
b101 R
b0 S
1-
1#
#160
0-
0#
#170
b1000001000000000000000000000000 (
b1000001000000000000000000000000 ;
b1000001000000000000000000000000 Z
b1000001000000000000000000000000 K$
b10000010 [
1C
b1 <
b1 a"
b1001111 P
b1010000 O
1_"
1@
b100 A
b11 /
b11 5
b11 H$
b11 T
b10011 Q
b10100 R
1-
1#
#180
0-
0#
#190
b1000000100000000000000000000000 (
b1000000100000000000000000000000 ;
b1000000100000000000000000000000 Z
b1000000100000000000000000000000 K$
b10000001 [
0C
0_"
1^"
06
b100111111 P
b101000000 O
b10 <
b10 a"
b11 b"
b10 `"
b101 A
b100 /
b100 5
b100 H$
b100 T
b1001111 Q
b1010000 R
1-
1#
#200
0-
0#
#210
0^"
b10011111111 P
b10100000000 O
b1010 <
b1010 a"
0@
b1011 b"
b1010 `"
b110 A
b101 /
b101 5
b101 H$
b101 T
b100111111 Q
b101000000 R
1-
1#
#220
0-
0#
#230
b1001111111111 P
b1010000000000 O
b101000 <
b101000 a"
b101001 b"
b101000 `"
b111 A
b110 /
b110 5
b110 H$
b110 T
b10011111111 Q
b10100000000 R
1-
1#
#240
0-
0#
#250
b100111111111111 P
b101000000000000 O
b10100000 <
b10100000 a"
b10100001 b"
b10100000 `"
b1000 A
b111 /
b111 5
b111 H$
b111 T
b1001111111111 Q
b1010000000000 R
1-
1#
#260
0-
0#
#270
b10011111111111111 P
b10100000000000000 O
b1010000000 <
b1010000000 a"
b1010000001 b"
b1010000000 `"
b1001 A
b1000 /
b1000 5
b1000 H$
b1000 T
b100111111111111 Q
b101000000000000 R
1-
1#
#280
0-
0#
#290
b1001111111111111111 P
b1010000000000000000 O
b101000000000 <
b101000000000 a"
b101000000001 b"
b101000000000 `"
b1010 A
b1001 /
b1001 5
b1001 H$
b1001 T
b10011111111111111 Q
b10100000000000000 R
1-
1#
#300
0-
0#
#310
b100111111111111111111 P
b101000000000000000000 O
b10100000000000 <
b10100000000000 a"
b10100000000001 b"
b10100000000000 `"
b1011 A
b1010 /
b1010 5
b1010 H$
b1010 T
b1001111111111111111 Q
b1010000000000000000 R
1-
1#
#320
0-
0#
#330
b10011111111111111111111 P
b10100000000000000000000 O
b1010000000000000 <
b1010000000000000 a"
b1010000000000001 b"
b1010000000000000 `"
b1100 A
b1011 /
b1011 5
b1011 H$
b1011 T
b100111111111111111111 Q
b101000000000000000000 R
1-
1#
#340
0-
0#
#350
b1001111111111111111111111 P
b1010000000000000000000000 O
b101000000000000000 <
b101000000000000000 a"
b101000000000000001 b"
b101000000000000000 `"
b1101 A
b1100 /
b1100 5
b1100 H$
b1100 T
b10011111111111111111111 Q
b10100000000000000000000 R
1-
1#
#360
0-
0#
#370
b100111111111111111111111111 P
b101000000000000000000000000 O
b10100000000000000000 <
b10100000000000000000 a"
b10100000000000000001 b"
b10100000000000000000 `"
b1110 A
b1101 /
b1101 5
b1101 H$
b1101 T
b1001111111111111111111111 Q
b1010000000000000000000000 R
1-
1#
#380
0-
0#
#390
b10011111111111111111111111111 P
b10100000000000000000000000000 O
b1010000000000000000000 <
b1010000000000000000000 a"
b1010000000000000000001 b"
b1010000000000000000000 `"
b1111 A
b1110 /
b1110 5
b1110 H$
b1110 T
b100111111111111111111111111 Q
b101000000000000000000000000 R
1-
1#
#400
0-
0#
#410
b1000000101000000000000000000000 (
b1000000101000000000000000000000 ;
b1000000101000000000000000000000 Z
b1000000101000000000000000000000 K$
b101000000000000000000000 Y
b101000000000000000000000 a
b101000000000000000000000 X
b101000000000000000000000 _
b1111111111111111111111111111 P
b10000000000000000000000000000 O
b101000000000000000000000 <
b101000000000000000000000 a"
b101000000000000000000000 9
b101000000000000000000000 V
b1000000101000000000000000000000 *
b1000000101000000000000000000000 M$
b101000000000000000000001 b"
b101000000000000000000000 `"
b10000 A
b1111 /
b1111 5
b1111 H$
b1111 T
b10011111111111111111111111111 Q
b10100000000000000000000000000 R
1-
1#
#420
0-
0#
#430
b10000001 [
b0 ^
b0 \
b0 `
b1000000100000000000000000000000 (
b1000000100000000000000000000000 ;
b1000000100000000000000000000000 Z
b1000000100000000000000000000000 K$
b0 Y
b0 a
b0 X
b0 _
b111111111111111111111111111111 P
b0 O
b100000000000000000000000 <
b100000000000000000000000 a"
b0 9
b0 V
b0 *
b0 M$
b100000000000000000000001 b"
b100000000000000000000000 `"
b10001 A
b10000 /
b10000 5
b10000 H$
b10000 T
b1111111111111111111111111111 Q
b10000000000000000000000000000 R
1-
1#
#440
0-
0#
#450
b0 <
b0 a"
b1 b"
b0 `"
b10010 A
b10001 /
b10001 5
b10001 H$
b10001 T
b111111111111111111111111111111 Q
b0 R
1-
1#
#460
0-
0#
#470
b10011 A
b10010 /
b10010 5
b10010 H$
b10010 T
1-
1#
#480
0-
0#
#490
b10100 A
b10011 /
b10011 5
b10011 H$
b10011 T
1-
1#
#500
0-
0#
#510
b10101 A
b10100 /
b10100 5
b10100 H$
b10100 T
1-
1#
#520
0-
0#
#530
b10110 A
b10101 /
b10101 5
b10101 H$
b10101 T
1-
1#
#540
0-
0#
#550
b10111 A
b10110 /
b10110 5
b10110 H$
b10110 T
1-
1#
#560
0-
0#
#570
b11000 A
b10111 /
b10111 5
b10111 H$
b10111 T
1-
1#
#580
0-
0#
#590
b11001 A
b11000 /
b11000 5
b11000 H$
b11000 T
1-
1#
#600
0-
0#
#610
b11010 A
b11001 /
b11001 5
b11001 H$
b11001 T
1-
1#
#620
0-
0#
#630
b11011 A
b11010 /
b11010 5
b11010 H$
b11010 T
1-
1#
#640
0-
0#
#650
b11100 A
b11011 /
b11011 5
b11011 H$
b11011 T
1-
1#
#660
0-
0#
#670
b11101 A
b11100 /
b11100 5
b11100 H$
b11100 T
1-
1#
#680
0-
0#
#690
b11110 A
b11101 /
b11101 5
b11101 H$
b11101 T
1-
1#
#700
0-
0#
#710
b11111 A
b11110 /
b11110 5
b11110 H$
b11110 T
1-
1#
#720
0-
0#
#730
b100000 A
b11111 /
b11111 5
b11111 H$
b11111 T
1-
1#
#740
0-
0#
#750
b100001 A
b100000 /
b100000 5
b100000 H$
b100000 T
1-
1#
#760
0-
0#
#770
b100010 A
b100001 /
b100001 5
b100001 H$
b100001 T
1-
1#
#780
0-
0#
#790
b100011 A
b100010 /
b100010 5
b100010 H$
b100010 T
1-
1#
#800
0-
0#
#810
b100100 A
b100011 /
b100011 5
b100011 H$
b100011 T
1-
1#
#820
0-
0#
#830
b100101 A
b100100 /
b100100 5
b100100 H$
b100100 T
1-
1#
#840
0-
0#
#850
b100110 A
b100101 /
b100101 5
b100101 H$
b100101 T
1-
1#
#860
0-
0#
#870
b100111 A
b100110 /
b100110 5
b100110 H$
b100110 T
1-
1#
#880
0-
0#
#890
b101000 A
b100111 /
b100111 5
b100111 H$
b100111 T
1-
1#
#900
0-
0#
#910
b101001 A
b101000 /
b101000 5
b101000 H$
b101000 T
1-
1#
#920
0-
0#
