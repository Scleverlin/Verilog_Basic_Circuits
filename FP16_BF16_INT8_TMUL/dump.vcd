$date
	Mon Mar 11 15:55:23 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FMA_Row_tb $end
$scope module FMA_ROW $end
$var wire 16 ! a [15:0] $end
$var wire 16 " b [15:0] $end
$var wire 16 # c [15:0] $end
$var wire 1 $ c_add_sign $end
$var wire 35 % ext_add [34:0] $end
$var wire 1 & final_sign $end
$var wire 1 ' left_no_add $end
$var wire 6 ( shift_nums [5:0] $end
$var wire 1 ) use_max_offset $end
$var wire 13 * two [12:0] $end
$var wire 14 + three [13:0] $end
$var wire 1 , sticky $end
$var wire 1 - sign_c $end
$var wire 1 . sign_ab $end
$var wire 34 / shifted_man_c [33:0] $end
$var wire 35 0 shifted_man [34:0] $end
$var wire 6 1 shift_when_max_offset [5:0] $end
$var wire 6 2 shift_man [5:0] $end
$var wire 11 3 rounded_man [10:0] $end
$var wire 1 4 round $end
$var wire 48 5 result_l2 [47:0] $end
$var wire 48 6 result_l1 [47:0] $end
$var wire 16 7 product [15:0] $end
$var wire 12 8 one [11:0] $end
$var wire 13 9 minus_two [12:0] $end
$var wire 14 : minus_three [13:0] $end
$var wire 12 ; minus_one [11:0] $end
$var wire 14 < minus_four [13:0] $end
$var wire 6 = max_offset [5:0] $end
$var wire 11 > mantissa_c [10:0] $end
$var wire 11 ? mantissa_b [10:0] $end
$var wire 11 @ mantissa_a [10:0] $end
$var wire 11 A man_before_round [10:0] $end
$var wire 6 B lz_count [5:0] $end
$var wire 1 C left_or_right $end
$var wire 24 D l1_2 [23:0] $end
$var wire 24 E l1_1 [23:0] $end
$var wire 1 F guard $end
$var wire 14 G four [13:0] $end
$var wire 6 H final_exp_tmp [5:0] $end
$var wire 6 I final_exp [5:0] $end
$var wire 34 J ext_man_c [33:0] $end
$var wire 6 K exp_offset [5:0] $end
$var wire 6 L exp_c_minus_ab [5:0] $end
$var wire 1 M exp_add $end
$var wire 6 N exp_ab [5:0] $end
$var wire 6 O comple_shift [5:0] $end
$var wire 35 P comple_add_result [34:0] $end
$var wire 1 Q add_sign $end
$var wire 35 R add_result [34:0] $end
$var wire 35 S add_ext_c [34:0] $end
$var wire 96 T Row_A_mul [95:0] $end
$var wire 24 U CSA_result_tmp [23:0] $end
$var wire 22 V CSA_result [21:0] $end
$scope function FA_function $end
$var reg 48 W result [47:0] $end
$var reg 24 X x [23:0] $end
$var reg 24 Y y [23:0] $end
$var reg 24 Z z [23:0] $end
$upscope $end
$scope module extractor $end
$var wire 16 [ a [15:0] $end
$var wire 16 \ b [15:0] $end
$var wire 16 ] c [15:0] $end
$var wire 1 . sign_ab $end
$var wire 1 - sign_c $end
$var wire 1 ^ sign_b $end
$var wire 1 _ sign_a $end
$var wire 11 ` mantissa_c [10:0] $end
$var wire 11 a mantissa_b [10:0] $end
$var wire 11 b mantissa_a [10:0] $end
$var wire 6 c exp_c_minus_ab [5:0] $end
$var wire 6 d exp_c [5:0] $end
$var wire 6 e exp_b [5:0] $end
$var wire 6 f exp_ab [5:0] $end
$var wire 1 g exp_a $end
$upscope $end
$scope module lzc $end
$var wire 35 h data [34:0] $end
$var reg 6 i exp_offset [5:0] $end
$var reg 6 j lz_count [5:0] $end
$upscope $end
$scope module mux $end
$var wire 11 k B_mantissa [10:0] $end
$var wire 13 l two [12:0] $end
$var wire 14 m three [13:0] $end
$var wire 12 n one [11:0] $end
$var wire 13 o minus_two [12:0] $end
$var wire 14 p minus_three [13:0] $end
$var wire 12 q minus_one [11:0] $end
$var wire 14 r minus_four [13:0] $end
$var wire 14 s four [13:0] $end
$var reg 96 t Row_A_mul [95:0] $end
$upscope $end
$scope module ppg $end
$var wire 11 u mantissa_a [10:0] $end
$var wire 14 v minus_four [13:0] $end
$var wire 12 w minus_one [11:0] $end
$var wire 14 x minus_three [13:0] $end
$var wire 13 y minus_two [12:0] $end
$var wire 12 z one [11:0] $end
$var wire 13 { two [12:0] $end
$var wire 14 | three [13:0] $end
$var wire 12 } mantissa_a_with_sign [11:0] $end
$var wire 14 ~ four [13:0] $end
$upscope $end
$scope module rounding $end
$var wire 1 F guard $end
$var wire 11 !" man [10:0] $end
$var wire 1 4 round $end
$var wire 1 , sticky $end
$var wire 1 "" tie $end
$var reg 1 M exp_add $end
$var reg 11 #" rounded_man [10:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx #"
x""
bx !"
b0xxxxxxxxxxx00 ~
b0xxxxxxxxxxx }
bx |
b0xxxxxxxxxxx0 {
b0xxxxxxxxxxx z
b1xxxxxxxxxxx1 y
bx x
b1xxxxxxxxxxx w
b1xxxxxxxxxxx11 v
bx u
bx000000000000000000000000000000000000000000000000x000000000000000000000000 t
b0xxxxxxxxxxx00 s
b1xxxxxxxxxxx11 r
b1xxxxxxxxxxx q
bx p
b1xxxxxxxxxxx1 o
b0xxxxxxxxxxx n
bx m
b0xxxxxxxxxxx0 l
bx k
bx j
bx i
bx h
xg
bx f
bx e
bx d
bx c
bx b
bx a
bx `
x_
x^
bx ]
bx \
bx [
bx0 Z
b0 Y
b0x X
b0xxxxxxxxxxxxxxxxxxxxxxxx W
bx V
bx U
bx000000000000000000000000000000000000000000000000x000000000000000000000000 T
bx S
bx R
xQ
bx P
bx O
bx N
xM
bx L
bx K
b0xxxxxxxxxxx0000000000 J
bx I
bx H
b0xxxxxxxxxxx00 G
xF
b0x E
b0 D
xC
bx B
bx A
bx @
bx ?
bx >
bx =
b1xxxxxxxxxxx11 <
b1xxxxxxxxxxx ;
bx :
b1xxxxxxxxxxx1 9
b0xxxxxxxxxxx 8
bx 7
b0x 6
b0xxxxxxxxxxxxxxxxxxxxxxxx 5
x4
bx 3
bx 2
bx 1
bx 0
bx /
x.
x-
x,
bx +
b0xxxxxxxxxxx0 *
x)
bx (
x'
x&
bx %
x$
bx #
bx "
bx !
$end
#10
b10001 I
0""
b10 H
b10110010000 3
b10110010000 #"
0M
b10110010000 A
b10110010000 !"
0F
14
0,
0)
b10 K
b100010110010000 7
0&
b10110010000010011011110000000000000 0
b10 2
b10 i
b1100 B
b1100 j
0Q
b10110010000010011011110 %
b10110010000010011011110 h
b10110010000010011011110 P
b10110010000010011011110 R
b1110010000100011011110 V
b1110010000100011011110 U
0'
b111111111111100011011100 E
b10 D
b111111111110000000000 /
b0 O
b11100100010000000000000110001101110100011011110 5
b10111111111111100011011100 6
b11100100010000000000000110001101110100011011110 W
b1110010001000000000000 Z
b10 Y
b111111111111100011011100 X
0C
b111111111110000000000 S
b0 (
b0 L
b0 c
b0 1
b1110 =
b0 N
b0 f
0g
b10101010011001 :
b10101010011001 p
b10101010011001 x
b1000110111011 9
b1000110111011 o
b1000110111011 y
b10001101110111 <
b10001101110111 r
b10001101110111 v
b100011011101 ;
b100011011101 q
b100011011101 w
b1110010001000000000000000000000000000000000000000000000000000000000001111111111111100011011101 T
b1110010001000000000000000000000000000000000000000000000000000000000001111111111111100011011101 t
0$
b0 d
b111111111110000000000 J
b11111111111 >
b11111111111 `
b0 e
b11111111111 ?
b11111111111 a
b11111111111 k
0.
b1010101100110 +
b1010101100110 m
b1010101100110 |
b111001000100 *
b111001000100 l
b111001000100 {
b1110010001000 G
b1110010001000 s
b1110010001000 ~
b11100100010 8
b11100100010 n
b11100100010 z
b11100100010 }
b11100100010 @
b11100100010 b
b11100100010 u
0-
0^
0_
b11111111111111 #
b11111111111111 ]
b11111111111111 "
b11111111111111 \
b11111100100010 !
b11111100100010 [
#120
