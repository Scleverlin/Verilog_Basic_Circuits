$date
	Fri Feb 10 19:43:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_serial_mul_8bit $end
$var wire 16 ! out [15:0] $end
$var reg 8 " a [7:0] $end
$var reg 8 # b [7:0] $end
$scope module mulp $end
$var wire 8 $ a [7:0] $end
$var wire 8 % b [7:0] $end
$var wire 16 & out [15:0] $end
$var wire 16 ' bit_7_mux [15:0] $end
$var wire 16 ( bit_6_mux [15:0] $end
$var wire 16 ) bit_6_7_sum [15:0] $end
$var wire 16 * bit_5_mux [15:0] $end
$var wire 16 + bit_4_mux [15:0] $end
$var wire 16 , bit_4_5_sum [15:0] $end
$var wire 16 - bit_3_mux [15:0] $end
$var wire 16 . bit_3_4_sum [15:0] $end
$var wire 16 / bit_2_mux [15:0] $end
$var wire 16 0 bit_2_3_sum [15:0] $end
$var wire 16 1 bit_1_mux [15:0] $end
$var wire 16 2 bit_1_2_sum [15:0] $end
$var wire 16 3 bit_0_mux [15:0] $end
$var wire 16 4 bit_0_1_sum [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
b0xxxxxxxx 3
bx 2
b0xxxxxxxx0 1
bx 0
b0xxxxxxxx00 /
bx .
b0xxxxxxxx000 -
bx ,
b0xxxxxxxx0000 +
b0xxxxxxxx00000 *
bx )
b0xxxxxxxx000000 (
b0xxxxxxxx0000000 '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#10
b1111111100000 !
b1111111100000 &
b111111100000 )
b11111100000 ,
b1111100000 .
b111100000 0
b11100000 2
b1100000 4
b100000 3
b1000000 1
b10000000 /
b100000000 -
b1000000000 +
b10000000000 *
b100000000000 (
b1000000000000 '
b100000 #
b100000 %
b11111111 "
b11111111 $
#30
b0 3
b0 4
b0 1
b100101000 2
b100101000 /
b1101111000 0
b1001010000 -
b1101111000 .
b0 +
b1101111000 ,
b0 *
b1101111000 )
b0 (
b1101111000 !
b1101111000 &
b0 '
b1001010 #
b1001010 %
b1100 "
b1100 $
#50
b1100000 2
b1100000 /
b100100000 !
b100100000 &
b100100000 )
b100100000 ,
b100100000 .
b100100000 0
b11000000 -
b11000 #
b11000 %
#70
b111 3
b10101 4
b1110 1
b11100000 *
b10101 2
b0 /
b100101101 !
b100101101 &
b100101101 )
b100101101 ,
b1001101 .
b1001101 0
b111000 -
b111 #
b111 %
b101011 "
b101011 $
#1000
