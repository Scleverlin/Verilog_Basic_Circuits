$date
	Thu Feb 23 22:14:43 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_lca_bitadder $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % cin $end
$scope module lca $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 8 ( sum [7:0] $end
$var wire 8 ) p [7:0] $end
$var wire 8 * g [7:0] $end
$var wire 8 + c [7:0] $end
$scope module pg0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 . g $end
$var wire 1 / p $end
$upscope $end
$scope module pg1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 g $end
$var wire 1 3 p $end
$upscope $end
$scope module pg2 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 g $end
$var wire 1 7 p $end
$upscope $end
$scope module pg3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : g $end
$var wire 1 ; p $end
$upscope $end
$scope module pg4 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > g $end
$var wire 1 ? p $end
$upscope $end
$scope module pg5 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 B g $end
$var wire 1 C p $end
$upscope $end
$scope module pg6 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F g $end
$var wire 1 G p $end
$upscope $end
$scope module pg7 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J g $end
$var wire 1 K p $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
bx +
bx *
bx )
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#10
0"
b111 !
b111 (
1/
0.
13
02
17
06
0;
0:
0?
0>
0C
0B
0G
0F
b111 )
0K
b0 *
0J
1-
01
15
09
0=
0A
0E
0I
0,
10
04
08
0<
0@
0D
0H
b0 +
0%
b101 $
b101 '
b10 #
b10 &
#20
b10 +
b10 !
b10 (
07
0/
b1 *
1.
b0 )
03
05
1,
00
b1 $
b1 '
b1 #
b1 &
#30
b101001 !
b101001 (
0.
16
b10100 *
1>
0-
15
1=
0,
14
1<
b101001 +
1%
b10100 $
b10100 '
b10100 #
b10100 &
#40
b10010111 !
b10010111 (
b10010111 +
1.
12
06
1:
0>
b1001011 *
1F
1-
11
05
19
0=
1E
1,
10
04
18
0<
1D
b1001011 $
b1001011 '
b1001011 #
b1001011 &
#50
1"
b0 !
b0 (
0.
02
0:
0F
b10000000 *
1J
0-
01
09
0E
1I
0,
00
08
0D
1H
b0 +
0%
b10000000 $
b10000000 '
b10000000 #
b10000000 &
#60
0"
b11011100 !
b11011100 (
17
1?
1K
b0 *
0J
1;
b11011100 )
1G
15
1=
0I
18
1D
b10100 $
b10100 '
b11001000 #
b11001000 &
#1000
