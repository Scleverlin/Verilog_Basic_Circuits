$date
	Thu Mar  9 20:33:56 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_lca_bitadder $end
$var wire 64 ! sum [63:0] $end
$var wire 1 " cout $end
$var reg 64 # a [63:0] $end
$var reg 64 $ b [63:0] $end
$var reg 1 % cin $end
$var reg 1 & clk $end
$var reg 1 ' rst $end
$scope module CLA $end
$var wire 64 ( a [63:0] $end
$var wire 64 ) b [63:0] $end
$var wire 1 * c0 $end
$var wire 1 % cin $end
$var wire 1 & clk $end
$var wire 1 ' rst $end
$var wire 64 + sum [63:0] $end
$var wire 1 , cout $end
$var wire 15 - bit_carry [14:0] $end
$var reg 1 " cout_r $end
$var reg 64 . sum_r [63:0] $end
$scope module u0 $end
$var wire 4 / a [3:0] $end
$var wire 4 0 b [3:0] $end
$var wire 1 * cin $end
$var wire 1 1 cout $end
$var wire 4 2 sum [3:0] $end
$var wire 4 3 p [3:0] $end
$var wire 4 4 g [3:0] $end
$var wire 4 5 c [3:0] $end
$scope module u0 $end
$var wire 4 6 a [3:0] $end
$var wire 4 7 b [3:0] $end
$var wire 4 8 g [3:0] $end
$var wire 4 9 p [3:0] $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 4 : a [3:0] $end
$var wire 4 ; b [3:0] $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 4 > sum [3:0] $end
$var wire 4 ? p [3:0] $end
$var wire 4 @ g [3:0] $end
$var wire 4 A c [3:0] $end
$scope module u0 $end
$var wire 4 B a [3:0] $end
$var wire 4 C b [3:0] $end
$var wire 4 D g [3:0] $end
$var wire 4 E p [3:0] $end
$upscope $end
$upscope $end
$scope module u10 $end
$var wire 4 F a [3:0] $end
$var wire 4 G b [3:0] $end
$var wire 1 H cin $end
$var wire 1 I cout $end
$var wire 4 J sum [3:0] $end
$var wire 4 K p [3:0] $end
$var wire 4 L g [3:0] $end
$var wire 4 M c [3:0] $end
$scope module u0 $end
$var wire 4 N a [3:0] $end
$var wire 4 O b [3:0] $end
$var wire 4 P g [3:0] $end
$var wire 4 Q p [3:0] $end
$upscope $end
$upscope $end
$scope module u11 $end
$var wire 4 R a [3:0] $end
$var wire 4 S b [3:0] $end
$var wire 1 T cin $end
$var wire 1 U cout $end
$var wire 4 V sum [3:0] $end
$var wire 4 W p [3:0] $end
$var wire 4 X g [3:0] $end
$var wire 4 Y c [3:0] $end
$scope module u0 $end
$var wire 4 Z a [3:0] $end
$var wire 4 [ b [3:0] $end
$var wire 4 \ g [3:0] $end
$var wire 4 ] p [3:0] $end
$upscope $end
$upscope $end
$scope module u12 $end
$var wire 4 ^ a [3:0] $end
$var wire 4 _ b [3:0] $end
$var wire 1 ` cin $end
$var wire 1 a cout $end
$var wire 4 b sum [3:0] $end
$var wire 4 c p [3:0] $end
$var wire 4 d g [3:0] $end
$var wire 4 e c [3:0] $end
$scope module u0 $end
$var wire 4 f a [3:0] $end
$var wire 4 g b [3:0] $end
$var wire 4 h g [3:0] $end
$var wire 4 i p [3:0] $end
$upscope $end
$upscope $end
$scope module u13 $end
$var wire 4 j a [3:0] $end
$var wire 4 k b [3:0] $end
$var wire 1 l cin $end
$var wire 1 m cout $end
$var wire 4 n sum [3:0] $end
$var wire 4 o p [3:0] $end
$var wire 4 p g [3:0] $end
$var wire 4 q c [3:0] $end
$scope module u0 $end
$var wire 4 r a [3:0] $end
$var wire 4 s b [3:0] $end
$var wire 4 t g [3:0] $end
$var wire 4 u p [3:0] $end
$upscope $end
$upscope $end
$scope module u14 $end
$var wire 4 v a [3:0] $end
$var wire 4 w b [3:0] $end
$var wire 1 x cin $end
$var wire 1 y cout $end
$var wire 4 z sum [3:0] $end
$var wire 4 { p [3:0] $end
$var wire 4 | g [3:0] $end
$var wire 4 } c [3:0] $end
$scope module u0 $end
$var wire 4 ~ a [3:0] $end
$var wire 4 !" b [3:0] $end
$var wire 4 "" g [3:0] $end
$var wire 4 #" p [3:0] $end
$upscope $end
$upscope $end
$scope module u15 $end
$var wire 4 $" a [3:0] $end
$var wire 4 %" b [3:0] $end
$var wire 1 &" cin $end
$var wire 1 , cout $end
$var wire 4 '" sum [3:0] $end
$var wire 4 (" p [3:0] $end
$var wire 4 )" g [3:0] $end
$var wire 4 *" c [3:0] $end
$scope module u0 $end
$var wire 4 +" a [3:0] $end
$var wire 4 ," b [3:0] $end
$var wire 4 -" g [3:0] $end
$var wire 4 ." p [3:0] $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 4 /" a [3:0] $end
$var wire 4 0" b [3:0] $end
$var wire 1 1" cin $end
$var wire 1 2" cout $end
$var wire 4 3" sum [3:0] $end
$var wire 4 4" p [3:0] $end
$var wire 4 5" g [3:0] $end
$var wire 4 6" c [3:0] $end
$scope module u0 $end
$var wire 4 7" a [3:0] $end
$var wire 4 8" b [3:0] $end
$var wire 4 9" g [3:0] $end
$var wire 4 :" p [3:0] $end
$upscope $end
$upscope $end
$scope module u3 $end
$var wire 4 ;" a [3:0] $end
$var wire 4 <" b [3:0] $end
$var wire 1 =" cin $end
$var wire 1 >" cout $end
$var wire 4 ?" sum [3:0] $end
$var wire 4 @" p [3:0] $end
$var wire 4 A" g [3:0] $end
$var wire 4 B" c [3:0] $end
$scope module u0 $end
$var wire 4 C" a [3:0] $end
$var wire 4 D" b [3:0] $end
$var wire 4 E" g [3:0] $end
$var wire 4 F" p [3:0] $end
$upscope $end
$upscope $end
$scope module u4 $end
$var wire 4 G" a [3:0] $end
$var wire 4 H" b [3:0] $end
$var wire 1 I" cin $end
$var wire 1 J" cout $end
$var wire 4 K" sum [3:0] $end
$var wire 4 L" p [3:0] $end
$var wire 4 M" g [3:0] $end
$var wire 4 N" c [3:0] $end
$scope module u0 $end
$var wire 4 O" a [3:0] $end
$var wire 4 P" b [3:0] $end
$var wire 4 Q" g [3:0] $end
$var wire 4 R" p [3:0] $end
$upscope $end
$upscope $end
$scope module u5 $end
$var wire 4 S" a [3:0] $end
$var wire 4 T" b [3:0] $end
$var wire 1 U" cin $end
$var wire 1 V" cout $end
$var wire 4 W" sum [3:0] $end
$var wire 4 X" p [3:0] $end
$var wire 4 Y" g [3:0] $end
$var wire 4 Z" c [3:0] $end
$scope module u0 $end
$var wire 4 [" a [3:0] $end
$var wire 4 \" b [3:0] $end
$var wire 4 ]" g [3:0] $end
$var wire 4 ^" p [3:0] $end
$upscope $end
$upscope $end
$scope module u6 $end
$var wire 4 _" a [3:0] $end
$var wire 4 `" b [3:0] $end
$var wire 1 a" cin $end
$var wire 1 b" cout $end
$var wire 4 c" sum [3:0] $end
$var wire 4 d" p [3:0] $end
$var wire 4 e" g [3:0] $end
$var wire 4 f" c [3:0] $end
$scope module u0 $end
$var wire 4 g" a [3:0] $end
$var wire 4 h" b [3:0] $end
$var wire 4 i" g [3:0] $end
$var wire 4 j" p [3:0] $end
$upscope $end
$upscope $end
$scope module u7 $end
$var wire 4 k" a [3:0] $end
$var wire 4 l" b [3:0] $end
$var wire 1 m" cin $end
$var wire 1 n" cout $end
$var wire 4 o" sum [3:0] $end
$var wire 4 p" p [3:0] $end
$var wire 4 q" g [3:0] $end
$var wire 4 r" c [3:0] $end
$scope module u0 $end
$var wire 4 s" a [3:0] $end
$var wire 4 t" b [3:0] $end
$var wire 4 u" g [3:0] $end
$var wire 4 v" p [3:0] $end
$upscope $end
$upscope $end
$scope module u8 $end
$var wire 4 w" a [3:0] $end
$var wire 4 x" b [3:0] $end
$var wire 1 y" cin $end
$var wire 1 z" cout $end
$var wire 4 {" sum [3:0] $end
$var wire 4 |" p [3:0] $end
$var wire 4 }" g [3:0] $end
$var wire 4 ~" c [3:0] $end
$scope module u0 $end
$var wire 4 !# a [3:0] $end
$var wire 4 "# b [3:0] $end
$var wire 4 ## g [3:0] $end
$var wire 4 $# p [3:0] $end
$upscope $end
$upscope $end
$scope module u9 $end
$var wire 4 %# a [3:0] $end
$var wire 4 &# b [3:0] $end
$var wire 1 '# cin $end
$var wire 1 (# cout $end
$var wire 4 )# sum [3:0] $end
$var wire 4 *# p [3:0] $end
$var wire 4 +# g [3:0] $end
$var wire 4 ,# c [3:0] $end
$scope module u0 $end
$var wire 4 -# a [3:0] $end
$var wire 4 .# b [3:0] $end
$var wire 4 /# g [3:0] $end
$var wire 4 0# p [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
x(#
x'#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
xz"
xy"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
xn"
xm"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
xb"
xa"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
xV"
xU"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
xJ"
xI"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
x>"
x="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
x2"
x1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
x&"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
xy
xx
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
xm
xl
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
xa
x`
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
xU
xT
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
xI
xH
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
x=
x<
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
x1
bx 0
bx /
bx .
bx -
x,
bx +
x*
bx )
bx (
x'
0&
x%
bx $
bx #
x"
bx !
$end
#10
b0 >
b0 3"
b0 ?"
b0 K"
b0 W"
b0 c"
b0 o"
b0 {"
b0 )#
b0 J
b0 V
b0 b
b0 n
b0 z
b0 '"
0<
01"
0="
0I"
0U"
0a"
0m"
0y"
0'#
0H
0T
0`
0l
0x
0&"
01
0=
b0 A
02"
b0 6"
0>"
b0 B"
0J"
b0 N"
0V"
b0 Z"
0b"
b0 f"
0n"
b0 r"
0z"
b0 ~"
0(#
b0 ,#
0I
b0 M
0U
b0 Y
0a
b0 e
0m
b0 q
b0 -
0y
b0 }
0,
b0 *"
b111 +
b111 2
b111 3
b111 9
b0 4
b0 8
b0 ?
b0 E
b0 @
b0 D
b0 4"
b0 :"
b0 5"
b0 9"
b0 @"
b0 F"
b0 A"
b0 E"
b0 L"
b0 R"
b0 M"
b0 Q"
b0 X"
b0 ^"
b0 Y"
b0 ]"
b0 d"
b0 j"
b0 e"
b0 i"
b0 p"
b0 v"
b0 q"
b0 u"
b0 |"
b0 $#
b0 }"
b0 ##
b0 *#
b0 0#
b0 +#
b0 /#
b0 K
b0 Q
b0 L
b0 P
b0 W
b0 ]
b0 X
b0 \
b0 c
b0 i
b0 d
b0 h
b0 o
b0 u
b0 p
b0 t
b0 {
b0 #"
b0 |
b0 ""
b0 ("
b0 ."
b0 )"
b0 -"
b101 0
b101 7
b0 ;
b0 C
b0 0"
b0 8"
b0 <"
b0 D"
b0 H"
b0 P"
b0 T"
b0 \"
b0 `"
b0 h"
b0 l"
b0 t"
b0 x"
b0 "#
b0 &#
b0 .#
b0 G
b0 O
b0 S
b0 [
b0 _
b0 g
b0 k
b0 s
b0 w
b0 !"
b0 %"
b0 ,"
b10 /
b10 6
b0 :
b0 B
b0 /"
b0 7"
b0 ;"
b0 C"
b0 G"
b0 O"
b0 S"
b0 ["
b0 _"
b0 g"
b0 k"
b0 s"
b0 w"
b0 !#
b0 %#
b0 -#
b0 F
b0 N
b0 R
b0 Z
b0 ^
b0 f
b0 j
b0 r
b0 v
b0 ~
b0 $"
b0 +"
b0 5
0*
0%
b101 $
b101 )
b10 #
b10 (
1&
#20
0&
#30
0"
b111 !
b111 .
b10 +
b10 2
b10 5
b0 3
b0 9
b1 4
b1 8
b1 0
b1 7
b1 /
b1 6
1&
b1 $
b1 )
b1 #
b1 (
#40
0&
#50
b10 !
b10 .
b10 >
b10 A
b101001 +
b1001 2
b100 4
b100 8
b1 @
b1 D
b100 0
b100 7
b1 ;
b1 C
b100 /
b100 6
b1 :
b1 B
1&
b1001 5
1*
1%
b10100 $
b10100 )
b10100 #
b10100 (
#60
0&
#70
b101001 !
b101001 .
b111 2
b10010111 +
b1001 >
1<
b1 -
11
b111 5
b1001 A
b1011 4
b1011 8
b100 @
b100 D
b1011 0
b1011 7
b100 ;
b100 C
b1011 /
b1011 6
b100 :
b100 B
1&
b1001011 $
b1001011 )
b1001011 #
b1001011 (
#80
0&
#90
b10010111 !
b10010111 .
b1 3"
b0 >
0<
b1 6"
11"
01
b10 -
1=
b0 A
b100000000 +
b0 2
b0 4
b0 8
b1000 @
b1000 D
b0 0
b0 7
b1000 ;
b1000 C
b0 /
b0 6
b1000 :
b1000 B
1&
b0 5
0*
0%
b10000000 $
b10000000 )
b10000000 #
b10000000 (
#100
0&
#110
b100000000 !
b100000000 .
b0 3"
b0 6"
01"
b1100 2
b11011100 +
b1101 >
b0 -
0=
b1100 3
b1100 9
b1101 ?
b1101 E
b0 @
b0 D
b100 0
b100 7
b1 ;
b1 C
b1000 /
b1000 6
b1100 :
b1100 B
1&
b10100 $
b10100 )
b11001000 #
b11001000 (
#120
0&
#130
b11011100 !
b11011100 .
1<
11"
b1 B"
1="
b1111 ?"
11
b1110 >
1=
b1111 A
b1011 3"
b111 -
12"
b1111 6"
b1000 K"
b1100 N"
b1011 W"
b101110001111101111100110 +
b110 2
b1110 @"
b1110 F"
b101 3
b101 9
b1000 4
b1000 8
b1 ?
b1 E
b1110 @
b1110 D
b100 4"
b100 :"
b1011 5"
b1011 9"
b100 L"
b100 R"
b10 M"
b10 Q"
b1011 X"
b1011 ^"
b1001 0
b1001 7
b1111 ;
b1111 C
b1011 0"
b1011 8"
b1110 <"
b1110 D"
b110 H"
b110 P"
b1001 T"
b1001 \"
b1100 /
b1100 6
b1110 :
b1110 B
b1111 /"
b1111 7"
b10 G"
b10 O"
b10 S"
b10 ["
1&
b11 5
1*
1%
b100101101110101111111001 $
b100101101110101111111001 )
b1000100000111111101100 #
b1000100000111111101100 (
#140
0&
#150
b101110001111101111100110 !
b101110001111101111100110 .
b101110001111101111100101 +
b101 2
1&
b0 5
0*
0%
#160
0&
#170
b101110001111101111100101 !
b101110001111101111100101 .
1&
#180
0&
#190
1&
#200
0&
#210
1&
#220
0&
#230
1&
#240
0&
#250
1&
#260
0&
#270
1&
#280
0&
#290
1&
#300
0&
#310
1&
#320
0&
#330
1&
#340
0&
#350
1&
#360
0&
#370
1&
#380
0&
#390
1&
#400
0&
#410
1&
#420
0&
#430
1&
#440
0&
#450
1&
#460
0&
#470
1&
#480
0&
#490
1&
#500
0&
#510
1&
#520
0&
#530
1&
#540
0&
#550
1&
#560
0&
#570
1&
#580
0&
#590
1&
#600
0&
#610
1&
#620
0&
#630
1&
#640
0&
#650
1&
#660
0&
#670
1&
#680
0&
#690
1&
#700
0&
#710
1&
#720
0&
#730
1&
#740
0&
#750
1&
#760
0&
#770
1&
#780
0&
#790
1&
#800
0&
#810
1&
#820
0&
#830
1&
#840
0&
#850
1&
#860
0&
#870
1&
#880
0&
#890
1&
#900
0&
#910
1&
#920
0&
#930
1&
#940
0&
#950
1&
#960
0&
#970
1&
#980
0&
#990
1&
#1000
0&
