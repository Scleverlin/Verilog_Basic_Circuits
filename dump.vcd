$date
	Sun Jan 22 19:21:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_8_bitadder $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % cin $end
$var reg 1 & enable $end
$var reg 1 ' rst $end
$scope module m1 $end
$var wire 8 ( a [7:0] $end
$var wire 8 ) b [7:0] $end
$var wire 1 % cin $end
$var wire 1 & enable $end
$var wire 1 ' rst $end
$var reg 1 " cout $end
$var reg 4 * high_bit_sum [3:0] $end
$var reg 4 + low_bit_sum [3:0] $end
$var reg 8 , sum [7:0] $end
$var reg 4 - temp_a [3:0] $end
$var reg 4 . temp_b [3:0] $end
$var reg 1 / temp_cin $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x/
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
x'
0&
x%
bx $
bx #
x"
bx !
$end
#10
b0 .
b0 -
0/
b0 +
1'
0%
b0 $
b0 )
b0 #
b0 (
1&
#20
0&
#30
b0 *
0"
b0 !
b0 ,
b10 +
1&
b1 $
b1 )
b1 #
b1 (
#40
0&
#50
b1 .
b1 -
b1001 +
b10 !
b10 ,
1&
1%
b10100 $
b10100 )
b10100 #
b10100 (
#60
0&
#70
b10 *
b101001 !
b101001 ,
b100 .
b100 -
1/
b111 +
1&
b1001011 $
b1001011 )
b1001011 #
b1001011 (
#80
0&
#90
b1000 .
b1000 -
0/
b0 +
b1001 *
b10010111 !
b10010111 ,
1&
0%
b10000000 $
b10000000 )
b10000000 #
b10000000 (
#100
0&
#110
b0 *
1"
b0 !
b0 ,
b1100 .
b1100 -
1/
1&
b11001000 $
b11001000 )
b11001000 #
b11001000 (
#120
0&
#130
b1001 *
b10010000 !
b10010000 ,
1&
#140
0&
#150
1&
#160
0&
#170
1&
#180
0&
#190
1&
#200
0&
